学习笔记
1 原理
1)fork， multprocess 举例说明了底层调用和进行调用的过程，
老师说用面向过程的方式讲的，面向对象的方式如何体现呢，没想清楚。
2)p.start 开始进程
  p.join 保证父进程可以在子进程运行完成后结束.
  p.terminal 强制中断  循环进程没有超时退出设置时使用
  p.close 等待执行完结束
  为什么 join之前要加close，terminal？
2应用场景
1） 进程间资源共享方案 队列
Queue方法  写入q.put  取出 q.put  先进先出
使用时建议设置队列最大值 block 
get  block 判定队列是否为空（Ture），timeout 超时判断
put. block True 队列满
2） 进程通信管道通信 
  send，recv 同时读取写入时，数据可能会损耗
3） 共享内存方式
   需提前定义数据的类型大小
4） 资源共享冲突解决方案 锁
同时写资源的时需要加锁 实现安全 
lock l l.lock 加锁 l.release 释放  保证资源安全，不处理顺序，执行顺序由系统决定
5） 进程池 pool
 random.choice  保证进程启动时间有差异
6） map.imap  的使用
  imap 迭代方式使用
  使用map，imap 的发放使用进程池 ，实现单进程的并发操纵
7）同步，非同步 ，阻塞，非阻塞
 同步非同步被调用方
 阻塞非阻塞，调用方
8） 并发，并行的区别
并发多对一  ，并行多对多